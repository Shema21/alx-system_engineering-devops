#!/bin/bash

# Convert from arbitrary base to decimal
# Args: $1=number, $2=base_digits
to_decimal() {
  local num=$1 base=$2
  local base_len=${#base}
  local decimal=0
  local digit
  local digit_val
  local i

  for (( i=0; i<${#num}; i++ )); do
    digit=${num:i:1}
    digit_val=$(expr index "$base" "$digit")
    if (( digit_val == 0 )); then
      echo "Invalid digit '$digit' for base '$base'" >&2
      exit 1
    fi
    # expr index returns 1-based index, so subtract 1
    digit_val=$((digit_val - 1))
    decimal=$((decimal * base_len + digit_val))
  done
  echo "$decimal"
}

# Convert from decimal to arbitrary base
# Args: $1=decimal_number, $2=base_digits
from_decimal() {
  local dec=$1 base=$2
  local base_len=${#base}
  local result=""

  if (( dec == 0 )); then
    echo "${base:0:1}"
    return
  fi

  while (( dec > 0 )); do
    local rem=$(( dec % base_len ))
    result="${base:rem:1}$result"
    dec=$(( dec / base_len ))
  done

  echo "$result"
}

# Custom bases as per problem
base_water="water"
base_stir="stir"
base_bestchol="bestchol"

# Read inputs from env variables
num_water=$WATER
num_stir=$STIR

# Convert both to decimal
dec_water=$(to_decimal "$num_water" "$base_water")
dec_stir=$(to_decimal "$num_stir" "$base_stir")

# Add them
sum=$((dec_water + dec_stir))

# Convert sum to base bestchol and print
from_decimal "$sum" "$base_bestchol"
